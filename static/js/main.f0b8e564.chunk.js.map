{"version":3,"sources":["Display.tsx","Inc.tsx","Reset.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Display","props","className","start","Inc","onClick","changeNumber","disabled","Reset","resetCounter","App","useState","setStart","startNumber","finishNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAeeA,EAPwB,SAACC,GACpC,OACI,qBAAKC,UAAU,UAAf,SACI,oBAAIA,UAA2B,IAAhBD,EAAME,MAAc,QAAU,UAA7C,SAAyDF,EAAME,WCG5DC,EAPgB,SAACH,GAC5B,OACI,8BACI,wBAAQC,UAAU,SAASG,QAAS,kBAAMJ,EAAMK,aAAaL,EAAME,QAAQI,SAAUN,EAAME,MAAQ,EAAnG,oBCIGK,EAPoB,SAACP,GAChC,OACI,8BACI,wBAAQC,UAAU,SAASG,QAAS,kBAAMJ,EAAMQ,aAAa,IAAIF,SAA0B,IAAhBN,EAAME,MAAjF,sBCaGO,MAhBf,WAAgB,IAAD,EACeC,mBAAiB,GADhC,mBACJR,EADI,KACGS,EADH,KAKX,OACI,sBAAKV,UAAU,MAAf,UACI,cAAC,EAAD,CAASC,MAAOA,IAChB,sBAAKD,UAAU,cAAf,UACI,cAAC,EAAD,CAAKI,aAPI,SAACO,GAAD,OAAyBD,EAASC,EAAc,IAOxBV,MAAOA,IACxC,cAAC,EAAD,CAAOM,aAPE,SAACK,GAAD,OAA0BF,EAASE,IAOTX,MAAOA,WCH3CY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f0b8e564.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\ntype DisplayType = {\r\n    start: number\r\n}\r\n\r\n\r\nconst Display: React.FC<DisplayType> = (props) => {\r\n    return (\r\n        <div className=\"display\">\r\n            <h1 className={props.start === 5 ? \"limit\" : \"nolimit\"}>{props.start}</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Display;","import React from 'react';\r\n\r\ntype IncType = {\r\n    changeNumber: (startNumber: number) => void\r\n    start: number\r\n}\r\n\r\nconst Inc: React.FC<IncType> = (props) => {\r\n    return (\r\n        <div>\r\n            <button className=\"button\" onClick={() => props.changeNumber(props.start)} disabled={props.start > 4}>INC</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Inc;","import React from 'react';\r\n\r\ntype ResetType = {\r\n    resetCounter : (finishNumber: number) => void\r\n    start: number\r\n}\r\n\r\nconst Reset: React.FC<ResetType> = (props) => {\r\n    return (\r\n        <div>\r\n            <button className=\"button\" onClick={() => props.resetCounter(0)} disabled={props.start === 0}>RESET</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Reset;","import React, {useState} from 'react';\nimport './App.css';\nimport Display from \"./Display\";\nimport Inc from \"./Inc\";\nimport Reset from \"./Reset\";\n\n\nfunction App() {\n    const [start, setStart] = useState<number>(0)\n    const changeNumber = (startNumber: number) => setStart(startNumber + 1)\n    const resetCounter = (finishNumber: number) => setStart(finishNumber)\n\n    return (\n        <div className=\"App\">\n            <Display start={start}/>\n            <div className=\"button-main\">\n                <Inc changeNumber={changeNumber} start={start}/>\n                <Reset resetCounter={resetCounter} start={start}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}